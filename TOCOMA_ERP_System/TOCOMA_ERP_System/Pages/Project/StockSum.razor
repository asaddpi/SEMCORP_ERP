@page "/StockSum"
@inject IJSRuntime JSRuntime
@layout CustomLayout
@inject HttpClient Http
<div class="card">
    <div class="card-header">
        <h3>Stock Summary</h3>
    </div>
    <br />

    <div class="testbox">
        <div class="tablearea">
            <table id="example" class="display" style="width:100%">
                <thead>
                    <tr>
                        @*<th style="width:40px"></th>
                            <th style="width:40px"></th>*@
                        <td>Item </td>
                        <td>Purchase</td>
                        <td>Out</td>
                        <td>Balance</td>

                    </tr>

                </thead>
                <tbody>
                    @if (stockStatementList != null)
                    {
                        foreach (var item in stockStatementList)
                        {
                            <tr>
                                @*<td style="text-align:center"><a style="color:red" @onclick=@(() => Delete(item.BRAND_ID))><span class="oi oi-trash"></span></a></td>
                    <td style="text-align:center"><a data-toggle="modal" data-target=".bd-example-modal-lg" href="#" @onclick=@(() => EditBrand(item.BRAND_ID))><span class="oi oi-pencil"></span></a></td>*@
                                <td>@item.strItemName</td>
                                @*<td>@item.purchaseQty</td>
                    <td>@item.salesQty</*@td>

                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@code {
    List<RStockInformation> stockStatementList = new List<RStockInformation>();
    protected override async Task OnInitializedAsync()
    {

        await GetVoucherList();
        StateHasChanged();
        await JSRuntime.InvokeAsync<object>("TestDataTablesAdd", "#example");
        await GetVoucherList();
        await JSRuntime.InvokeAsync<object>("TestDataTablesAdd", "#example");
    }
    private async Task GetVoucherList()
    {
        stockStatementList = await Http.GetJsonAsync<List<RStockInformation>>(Utility.BaseUrl + "api/Purchase/GetStockSummery");

    }
}
