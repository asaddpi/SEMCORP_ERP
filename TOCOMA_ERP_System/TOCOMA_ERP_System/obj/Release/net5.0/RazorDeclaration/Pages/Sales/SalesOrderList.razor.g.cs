// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace TOCOMA_ERP_System.Pages.Sales
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "D:\Project\Company All Project\SEMCORP\Solution\TOCOMA_ERP_System\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Project\Company All Project\SEMCORP\Solution\TOCOMA_ERP_System\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\Project\Company All Project\SEMCORP\Solution\TOCOMA_ERP_System\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\Project\Company All Project\SEMCORP\Solution\TOCOMA_ERP_System\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\Project\Company All Project\SEMCORP\Solution\TOCOMA_ERP_System\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\Project\Company All Project\SEMCORP\Solution\TOCOMA_ERP_System\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\Project\Company All Project\SEMCORP\Solution\TOCOMA_ERP_System\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\Project\Company All Project\SEMCORP\Solution\TOCOMA_ERP_System\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "D:\Project\Company All Project\SEMCORP\Solution\TOCOMA_ERP_System\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using TOCOMA_ERP_System;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "D:\Project\Company All Project\SEMCORP\Solution\TOCOMA_ERP_System\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using TOCOMA_ERP_System.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "D:\Project\Company All Project\SEMCORP\Solution\TOCOMA_ERP_System\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using TOCOMA_ERP_ClassLibrary.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "D:\Project\Company All Project\SEMCORP\Solution\TOCOMA_ERP_System\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using TOCOMA_ERP_ClassLibrary.Models.WebsiteModel;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "D:\Project\Company All Project\SEMCORP\Solution\TOCOMA_ERP_System\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using Blazored.Toast;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "D:\Project\Company All Project\SEMCORP\Solution\TOCOMA_ERP_System\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using Blazored.Toast.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "D:\Project\Company All Project\SEMCORP\Solution\TOCOMA_ERP_System\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using TOCOMA_ERP_System.Controller;

#line default
#line hidden
#nullable disable
#nullable restore
#line 16 "D:\Project\Company All Project\SEMCORP\Solution\TOCOMA_ERP_System\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using Microsoft.AspNetCore.ProtectedBrowserStorage;

#line default
#line hidden
#nullable disable
#nullable restore
#line 17 "D:\Project\Company All Project\SEMCORP\Solution\TOCOMA_ERP_System\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using TOCOMA_ERP_System.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 18 "D:\Project\Company All Project\SEMCORP\Solution\TOCOMA_ERP_System\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using Microsoft.AspNetCore.Hosting;

#line default
#line hidden
#nullable disable
#nullable restore
#line 19 "D:\Project\Company All Project\SEMCORP\Solution\TOCOMA_ERP_System\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using Blazored.LocalStorage;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\Project\Company All Project\SEMCORP\Solution\TOCOMA_ERP_System\TOCOMA_ERP_System\TOCOMA_ERP_System\Pages\Sales\SalesOrderList.razor"
using Blazored.Typeahead;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.LayoutAttribute(typeof(CustomLayout))]
    [Microsoft.AspNetCore.Components.RouteAttribute("/SalesOrderList")]
    public partial class SalesOrderList : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 137 "D:\Project\Company All Project\SEMCORP\Solution\TOCOMA_ERP_System\TOCOMA_ERP_System\TOCOMA_ERP_System\Pages\Sales\SalesOrderList.razor"
       
    List<SalesOrderViewModel> AllsalesOrderList = new List<SalesOrderViewModel>();
    List<SalesOrderViewModel> salesOrderList = new List<SalesOrderViewModel>();
    SalesOrderViewModel salesInfo = new SalesOrderViewModel();
    List<SalesItemDetailsModel> itemList = new List<SalesItemDetailsModel>();
    List<PurchaseTermsConditionsModel> termsConditionList = new List<PurchaseTermsConditionsModel>();
    List<PurchaseTermsConditionsModel> termsAndConditionList = new List<PurchaseTermsConditionsModel>();
    PurchaseTermsConditionsModel condition = new PurchaseTermsConditionsModel();
    List<SalesOrderViewModel> shipmentStatusList = new List<SalesOrderViewModel>();
    SalesQuotationView salesQuotationInfo = new SalesQuotationView();
    List<SalesQuotationItemView> salesQuotationItemList = new List<SalesQuotationItemView>();
    public int pageSize { get; set; }
    public int TotalPage { get; set; }
    public int Currentpage { get; set; }
    public int StartNumber { get; set; }
    public int EndNumber { get; set; }
    string termsId = "";
    int iOption = 0;
    int rptType;
    string WorkOrderNo;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            AllsalesOrderList = await Http.GetJsonAsync<List<SalesOrderViewModel>>(Utility.BaseUrl + "api/Sales/GetSalesOrderInfo");
            salesOrderList = await Http.GetJsonAsync<List<SalesOrderViewModel>>(Utility.BaseUrl + "api/Sales/GetSalesOrderInfo");
            shipmentStatusList = await Http.GetJsonAsync<List<SalesOrderViewModel>>(Utility.BaseUrl + "api/Sales/GetShipmentStatus");
            StateHasChanged();
            await JSRuntime.InvokeAsync<object>("TestDataTablesAdd", "#example");
        }
        catch (Exception ex)
        {

        }
        Pagination();
    }
    private void NavigatTo(string direction)
    {
        if (direction == "prev" && Currentpage != 0)
            Currentpage -= 1;
        if (direction == "next" && Currentpage != TotalPage - 1)
            Currentpage += 1;

        UpdateList(Currentpage);
    }
    private void UpdateList(int pageNumber)
    {
        AllsalesOrderList = salesOrderList.Skip(pageNumber * pageSize).Take(pageSize).ToList();
        Currentpage = pageNumber;
        if (AllsalesOrderList.Count > 0)
        {
            StartNumber = AllsalesOrderList.FirstOrDefault().SL;
            EndNumber = AllsalesOrderList[AllsalesOrderList.Count - 1].SL;
        }

    }
    private void Pagination()
    {
        pageSize = 20;
        if (salesOrderList.Count > 0)
        {
            AllsalesOrderList = salesOrderList.Take(pageSize).ToList();
            TotalPage = (int)Math.Ceiling(salesOrderList.Count() / (decimal)pageSize);
            StartNumber = AllsalesOrderList.FirstOrDefault().SL;
            EndNumber = AllsalesOrderList[AllsalesOrderList.Count - 1].SL;
        }

    }
    private async Task GetSalesQuotationById(string quotationNo)
    {

        salesQuotationInfo = await Http.GetJsonAsync<SalesQuotationView>(Utility.BaseUrl + "api/Sales/GetsalesQuotationInfoByQuotationNo/" + quotationNo);
        if (salesQuotationInfo.TERMS_AND_CONDITION != null && salesQuotationInfo.TERMS_AND_CONDITION != "")
        {
            termsConditionList = await Http.GetJsonAsync<List<PurchaseTermsConditionsModel>>(Utility.BaseUrl + "api/Sales/GetSalesTermsAndConditionsByIds/" + salesQuotationInfo.TERMS_AND_CONDITION);
            AppState.SalestermsConditionList = termsConditionList;
        }

        //porder.REPORT_TYPE = "1";
        salesQuotationItemList = await Http.GetJsonAsync<List<SalesQuotationItemView>>(Utility.BaseUrl + "api/Sales/GetSalesQuotationItemListByByQuotationNo/" + quotationNo);
        //porder.pOrderDetailsList = purchaseOrderDetailsList;
        AppState.salesQuotation = salesQuotationInfo;
        AppState.salesQuotationitemList = salesQuotationItemList;

        await JSRuntime.InvokeAsync<object>("open", "api/RDLCReport/GetSalesQuotation", "_blank");
    }
    public async Task ChangeStatus(string salesOrderNo, object checkedValue)
    {

        string status = checkedValue.ToString();
        SalesOrderModel p = new SalesOrderModel();
        p.SALES_ORDER_NO = salesOrderNo;
        p.STATUS_OF_SHIPMENT = status;
        //ACC_COMPANY_VOUCHER_MODEL accCompanyVoucherModel = new ACC_COMPANY_VOUCHER_MODEL();
        //List<ACC_VOUCHER_MODEL> paymentVoucherDetails = new List<ACC_VOUCHER_MODEL>();
        //ACC_VOUCHER_MODEL voucherDetails = new ACC_VOUCHER_MODEL();

        //try
        //{
        //    if (selected_date == "" || selected_date == null)
        //    { accCompanyVoucherModel.COMP_VOUCHER_DATE = Convert.ToDateTime(currentDate); }
        //    accCompanyVoucherModel.BRANCH_ID = branchList.Find(x => x.BRANCH_NAME == BranchName).BRANCH_ID;
        //    accCompanyVoucherModel.LEDGER_NAME = voucherItemList.FirstOrDefault().particular;
        //    accCompanyVoucherModel.COMP_VOUCHER_AMOUNT = totalDebit;
        //    accCompanyVoucherModel.COMP_VOUCHER_ADD_AMOUNT = totalDebit;
        //    accCompanyVoucherModel.COMP_VOUCHER_LESS_AMOUNT = totalDebit;
        //    accCompanyVoucherModel.COMP_VOUCHER_NET_AMOUNT = totalDebit;
        //    accCompanyVoucherModel.COMP_VOUCHER_PROCESS_AMOUNT = totalDebit;
        //    accCompanyVoucherModel.COMP_VOUCHER_NARRATION = narration;
        //    accCompanyVoucherModel.COMP_VOUCHER_TYPE = 3;
        //    accCompanyVoucherModel.ENTRYBY = "Asaduzzaman";
        //    accCompanyVoucherModel.UPDATEBY = "Asaduzzaman";




        //    //var data = await Http.PostJsonAsync<ACC_COMPANY_VOUCHER_MODEL>(Utility.BaseUrl + "api/Transection/AddPaymentVoucher", accCompanyVoucherModel);
        //    foreach (var item in voucherItemList)
        //    {
        //        voucherDetails = new ACC_VOUCHER_MODEL();
        //        voucherDetails.COMP_REF_NO = accCompanyVoucherModel.COMP_REF_NO;
        //        voucherDetails.VOUCHER_REF_KEY = "";
        //        voucherDetails.BRANCH_ID = accCompanyVoucherModel.BRANCH_ID;
        //        voucherDetails.COMP_VOUCHER_DATE = accCompanyVoucherModel.COMP_VOUCHER_DATE;
        //        voucherDetails.COMP_VOUCHER_TYPE = 3;
        //        voucherDetails.LEDGER_NAME = item.particular;
        //        voucherDetails.VOUCHER_DEBIT_AMOUNT = item.debitAmount;
        //        voucherDetails.VOUCHER_CREDIT_AMOUNT = item.creditAmount;
        //        voucherDetails.VOUCHER_ADD_AMOUNT = item.creditAmount;
        //        voucherDetails.VOUCHER_LESS_AMOUNT = item.creditAmount;
        //        voucherDetails.VOUCHER_TOBY = item.symbol;
        //        voucherDetails.VOUCHER_FC_DEBIT_AMOUNT = 0;
        //        voucherDetails.VOUCHER_FC_CREDIT_AMOUNT = 0;
        //        if (item.ChequeNo != "" && item.ChequeNo != null && item.ChequeNo != "NULL")
        //        {
        //            voucherDetails.VOUCHER_CHEQUE_NUMBER = item.ChequeNo;
        //            voucherDetails.VOUCHER_CHEQUE_DATE = item.ChequeDate;
        //            voucherDetails.VOUCHER_CHEQUE_DRAWN_ON = item.DrawnOn;
        //        }
        //        paymentVoucherDetails.Add(voucherDetails);
        //        accCompanyVoucherModel.accVoucherList.Add(voucherDetails);
        //    }
        //    //var voucher = await Http.PostJsonAsync<List<ACC_VOUCHER_MODEL>>(Utility.BaseUrl + "api/Transection/AddPaymentVoucherDetails", paymentVoucherDetails);
        //    var data = await Http.PostJsonAsync<ACC_COMPANY_VOUCHER_MODEL>(Utility.BaseUrl + "api/Transection/AddPaymentVoucher", accCompanyVoucherModel);
        //    if (data.status == true)
        //    {
        //        toastService.ShowSuccess("Status Updated!!!");
        //        //await LoadPage();
        //    }
        //    else { toastService.ShowError("Not Save :" + data.ErrorMessage); }

        //}
        //catch (Exception ex)
        //{

        //}
        var payment = await Http.PutJsonAsync<SalesOrderModel>(Utility.BaseUrl + "api/Sales/UpdateSalesShipmentStatus", p);
    }
    async void CheckboxClicked(string salesOrderNo, object checkedValue)
    {
        if ((bool)checkedValue)
        {
            WorkOrderNo = salesOrderNo;
            //salesInfo = await Http.GetJsonAsync<SalesOrderViewModel>(Utility.BaseUrl + "api/Sales/GetSalesInfoByPONo/" + salesOrderNo);
            //itemList = await Http.GetJsonAsync<List<SalesItemDetailsModel>>(Utility.BaseUrl + "api/Sales/GetSalesItemByPONo/" + salesOrderNo);
            //termsId = salesInfo.TERMS_AND_CONDITION;
            //if (termsId != null)
            //{ termsAndConditionList = await Http.GetJsonAsync<List<PurchaseTermsConditionsModel>>(Utility.BaseUrl + "api/Sales/GetTermsAndConditions/" + termsId); }

            //foreach (var item in termsAndConditionList)
            //{
            //    condition = new PurchaseTermsConditionsModel();
            //    condition.PURCHASE_TERMS_CONDITION_ID = item.PURCHASE_TERMS_CONDITION_ID;
            //    condition.SALES_TERMS_CONDITION_ID = item.SALES_TERMS_CONDITION_ID;
            //    condition.SL = item.SL;
            //    condition.TERMS_AND_CONDITIONS = item.SL + " ." + item.TERMS_AND_CONDITIONS;

            //    termsConditionList.Add(condition);

            //}

            //AppState.SalestermsConditionList = termsConditionList;

        }
        this.StateHasChanged();
    }
    private async void DeliveryNoteClicked()
    {
        iOption = 1;
        rptType = 1;
        //await GoPreview();
        try
        {
            await JsRuntime.InvokeAsync<object>("open", "api/RDLCReport/GetSalesDeliveryNote", "_blank");
        }
        catch { }


    }
    private async void InvoiceClicked()
    {
        iOption = 2;
        rptType = 2;
        //await JsRuntime.InvokeAsync<object>("open", "api/RDLCReport/GetSalesInvoice", "_blank");
        //await GoPreview();
        //StateHasChanged();
        try { await JsRuntime.InvokeAsync<object>("open", "api/RDLCReport/GetSalesInvoice", "_blank"); }
        catch { }

    }
    private async Task GoPreview()
    {
        //if(rptType==1)
        //{ }
        //else if(rptType==2)
        //{ }
        try
        {
            if (rptType == 1)
            { await JsRuntime.InvokeAsync<object>("open", "api/RDLCReport/GetSalesDeliveryNote", "_blank"); }
            else if (rptType == 2)
            { await JsRuntime.InvokeAsync<object>("open", "api/RDLCReport/GetSalesInvoice", "_blank"); }
        }
        catch { }



    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private Blazored.SessionStorage.ISessionStorageService sessionStorage { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private Microsoft.JSInterop.IJSRuntime JsRuntime { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime JSRuntime { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IToastService toastService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient Http { get; set; }
    }
}
#pragma warning restore 1591
