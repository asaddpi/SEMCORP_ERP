// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace TOCOMA_ERP_System.Pages.DeliveryNote
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "D:\SEMCORP\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\SEMCORP\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\SEMCORP\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\SEMCORP\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\SEMCORP\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\SEMCORP\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\SEMCORP\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\SEMCORP\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "D:\SEMCORP\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using TOCOMA_ERP_System;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "D:\SEMCORP\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using TOCOMA_ERP_System.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "D:\SEMCORP\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using TOCOMA_ERP_ClassLibrary.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "D:\SEMCORP\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using TOCOMA_ERP_ClassLibrary.Models.WebsiteModel;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "D:\SEMCORP\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using Blazored.Toast;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "D:\SEMCORP\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using Blazored.Toast.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "D:\SEMCORP\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using TOCOMA_ERP_System.Controller;

#line default
#line hidden
#nullable disable
#nullable restore
#line 16 "D:\SEMCORP\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using Microsoft.AspNetCore.ProtectedBrowserStorage;

#line default
#line hidden
#nullable disable
#nullable restore
#line 17 "D:\SEMCORP\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using TOCOMA_ERP_System.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 18 "D:\SEMCORP\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using Microsoft.AspNetCore.Hosting;

#line default
#line hidden
#nullable disable
#nullable restore
#line 19 "D:\SEMCORP\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using Blazored.LocalStorage;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Components.LayoutAttribute(typeof(CustomLayout))]
    [global::Microsoft.AspNetCore.Components.RouteAttribute("/DeliveryNoteList")]
    public partial class DeliveryNoteList : global::Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 98 "D:\SEMCORP\TOCOMA_ERP_System\TOCOMA_ERP_System\Pages\DeliveryNote\DeliveryNoteList.razor"
       

    CustomerModel customer = new CustomerModel();
    List<CustomerViewModel> allcustomerList = new List<CustomerViewModel>();
    List<CustomerViewModel> customerList = new List<CustomerViewModel>();
    List<DeliveryNoteViewModel> AllDeliveryNoteList = new List<DeliveryNoteViewModel>();
    List<DeliveryNoteViewModel> quotationList = new List<DeliveryNoteViewModel>();
    SalesQuotationView salesQuotationInfo = new SalesQuotationView();
    List<SalesQuotationItemView> salesQuotationItemList = new List<SalesQuotationItemView>();
    List<PurchaseTermsConditionsModel> termsConditionList = new List<PurchaseTermsConditionsModel>();
    DeliveryNoteViewModel deliveryNoteMaster = new DeliveryNoteViewModel();
    List<DeliveryNoteViewModel> deliveryDetails = new List<DeliveryNoteViewModel>();


    public int pageSize { get; set; }
    public int TotalPage { get; set; }
    public int Currentpage { get; set; }
    public int StartNumber { get; set; }
    public int EndNumber { get; set; }
    bool checkStatus = false;
    int iOption = 0;
    //[Parameter]
    //public string woNo { get; set; }

    protected override async Task OnInitializedAsync()
    {
        AllDeliveryNoteList = await Http.GetJsonAsync<List<DeliveryNoteViewModel>>(Utility.BaseUrl + "api/Sales/GetAllDeliveryNoteInfo");
        quotationList = await Http.GetJsonAsync<List<DeliveryNoteViewModel>>(Utility.BaseUrl + "api/Sales/GetAllDeliveryNoteInfo");
        //AppState.salesQuotation = quotationList;
        //Pagination();
        StateHasChanged();
        await js.InvokeAsync<object>("TestDataTablesAdd", "#example");
    }

    async void CheckboxClicked(string deliverynoteNo, object checkedValue)
    {
        if ((bool)checkedValue)
        {
            //deliveryNoteMaster = await Http.GetJsonAsync<DeliveryNoteViewModel>(Utility.BaseUrl + "api/Sales/GetDeliveryInfoByDNNo/" + deliverynoteNo);
            deliveryDetails = await Http.GetJsonAsync<List<DeliveryNoteViewModel>>(Utility.BaseUrl + "api/Sales/GetDeliveryInfoByDNNo/" + deliverynoteNo);
            //termsId = salesInfo.TERMS_AND_CONDITION;
            //if (termsId != null)
            //{ termsAndConditionList = await Http.GetJsonAsync<List<PurchaseTermsConditionsModel>>(Utility.BaseUrl + "api/Sales/GetTermsAndConditions/" + termsId); }
            //int i = 1;
            //foreach (var item in termsAndConditionList)
            //{
            //    condition = new PurchaseTermsConditionsModel();
            //    condition.PURCHASE_TERMS_CONDITION_ID = item.PURCHASE_TERMS_CONDITION_ID;
            //    condition.SALES_TERMS_CONDITION_ID = item.SALES_TERMS_CONDITION_ID;
            //    condition.SL = item.SL;
            //    condition.TERMS_AND_CONDITIONS = item.SL + " ." + item.TERMS_AND_CONDITIONS;

            //    termsConditionList.Add(condition);
            //    //i++;
            //}
            AppState.deliveryNoteView = deliveryNoteMaster;
            AppState.DeliveryItemDetails = deliveryDetails;
            //AppState.SalestermsConditionList = termsConditionList;

        }
        this.StateHasChanged();
    }
    private async void GetDeliveryInfoById(string dn_No)
    {
        deliveryNoteMaster = await Http.GetJsonAsync<DeliveryNoteViewModel>(Utility.BaseUrl + "api/Sales/GetDeliveryInfoByDNNo/" + dn_No);
    }
    private async void PrintDeliveryNote()
    {

        try
        {
            await js.InvokeAsync<object>("open", "api/RDLCReport/GetSalesDeliveryNote", "_blank");
        }
        catch { }
    }
    private async void DeliveryNoteClicked(string deliverynoteNo)
    {

        try
        {
            deliveryDetails = await Http.GetJsonAsync<List<DeliveryNoteViewModel>>(Utility.BaseUrl + "api/Sales/GetDeliveryInfoByDNNo/" + deliverynoteNo);
            AppState.deliveryNoteView = deliveryDetails.FirstOrDefault();
            AppState.DeliveryItemDetails = deliveryDetails;
            await js.InvokeAsync<object>("open", "api/RDLCReport/GetSalesDeliveryNote", "_blank");
        }
        catch { }
    }
    private void NavigatTo(string direction)
    {
        if (direction == "prev" && Currentpage != 0)
            Currentpage -= 1;
        if (direction == "next" && Currentpage != TotalPage - 1)
            Currentpage += 1;

        UpdateList(Currentpage);
    }
    private void UpdateList(int pageNumber)
    {
        AllDeliveryNoteList = quotationList.Skip(pageNumber * pageSize).Take(pageSize).ToList();
        Currentpage = pageNumber;
        if (AllDeliveryNoteList.Count > 0)
        {
            StartNumber = AllDeliveryNoteList.FirstOrDefault().SL;
            EndNumber = AllDeliveryNoteList[AllDeliveryNoteList.Count - 1].SL;
        }

    }
    private void Pagination()
    {
        pageSize = 20;
        if (quotationList.Count > 0)
        {
            AllDeliveryNoteList = quotationList.Take(pageSize).ToList();
            TotalPage = (int)Math.Ceiling(quotationList.Count() / (decimal)pageSize);
            StartNumber = AllDeliveryNoteList.FirstOrDefault().SL;
            EndNumber = AllDeliveryNoteList[AllDeliveryNoteList.Count - 1].SL;
        }

    }


#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime js { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IToastService toastService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient Http { get; set; }
    }
}
#pragma warning restore 1591
